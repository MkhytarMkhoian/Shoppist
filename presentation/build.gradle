apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'me.tatarka.retrolambda'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'me.tatarka:gradle-retrolambda:3.2.5'
    }
}

android {
    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
    buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")

    defaultConfig {
        minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
        targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")

        applicationId globalConfiguration.getAt("androidApplicationId")
        versionCode globalConfiguration.getAt("androidVersionCode")
        versionName globalConfiguration.getAt("androidVersionName")
        testInstrumentationRunner globalConfiguration.getAt("testInstrumentationRunner")
        testApplicationId globalConfiguration.getAt("testApplicationId")
    }

    sourceSets {
        test {
            java.srcDirs += "$projectDir/src/testShared"
        }

        androidTest {
            java.srcDirs += "$projectDir/src/testShared"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix '.debug'
            versionNameSuffix '-DEBUG'
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            testCoverageEnabled = true
        }
    }
    compileOptions {
        encoding "UTF-8"
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings true
        disable 'InvalidPackage'            //Some libraries have issues with this.
        disable 'OldTargetApi'
        //Lint gives this warning but SDK 20 would be Android L Beta.
        disable 'IconDensities'             //For testing purpose. This is safe to remove.
        disable 'IconMissingDensityFolder'  //For testing purpose. This is safe to remove.
        disable "MissingTranslation"
    }

    signingConfigs {
//        release {
//            try {
//                storeFile file("myapp.keystore")
//                storePassword KEYSTORE_PASSWORD
//                keyAlias "thekey"
//                keyPassword KEY_PASSWORD
//            }
//            catch (ex) {
//                throw new InvalidUserDataException("You should define KEYSTORE_PASSWORD and KEY_PASSWORD in gradle.properties.")
//            }
//        }
        debug {
            storeFile file('../buildsystem/debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }
}

dependencies {
    def presentationDependencies = rootProject.ext.presentationDependencies
    def presentationTestDependencies = rootProject.ext.presentationTestDependencies
    def developmentDependencies = rootProject.ext.developmentDependencies

    compile project(':domain')
    compile project(':data')

    apt presentationDependencies.daggerCompiler
    compile presentationDependencies.dagger
    provided presentationDependencies.javaxAnnotation

    compile presentationDependencies.rxJava
    compile presentationDependencies.rxAndroid

    compile presentationDependencies.support4
    compile presentationDependencies.gridLayoutView
    compile presentationDependencies.appcompat
    compile presentationDependencies.design
    compile presentationDependencies.recyclerView
    compile presentationDependencies.calligraphy
    compile presentationDependencies.butterKnife

    compile(presentationDependencies.advRecyclerView) {
        transitive = true
        exclude module: 'appcompat-v7'
        exclude module: 'recyclerview-v7'
    }
    compile(presentationDependencies.materialPreference) {
        exclude module: 'appcompat-v7'
    }
    compile(presentationDependencies.materialEditText) {
        exclude module: 'appcompat-v7'
    }
    compile(presentationDependencies.materialDateTimePicker) {
        exclude module: 'appcompat-v7'
    }

    testCompile presentationTestDependencies.junit
    testCompile presentationTestDependencies.assertj
    testCompile presentationTestDependencies.mockito
    testCompile presentationTestDependencies.powermockModuleJunit4
    testCompile presentationTestDependencies.powermockModuleJunit4Rule
    testCompile presentationTestDependencies.powermockApiMockito

    androidTestCompile presentationTestDependencies.mockito
    androidTestCompile presentationTestDependencies.dexmaker
    androidTestCompile presentationTestDependencies.dexmakerMockito

    androidTestCompile(presentationTestDependencies.espressoCore, {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestCompile(presentationTestDependencies.supportTestRunner) {
        exclude module: 'support-annotations'
        exclude module: 'support-v4'
    }
    androidTestCompile(presentationTestDependencies.supportTestRules) {
        exclude module: 'support-annotations'
        exclude module: 'support-v4'
    }
    androidTestCompile(presentationTestDependencies.espressoIntents) {
        exclude module: 'recyclerview-v7'
        exclude module: 'support-annotations'
        exclude module: 'support-v4'
    }
    androidTestCompile(presentationTestDependencies.espressoContrib) {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude module: 'recyclerview-v7'
    }
}
